#!/usr/bin/env python
import os
import sys
from collections import namedtuple

import duckietown_utils as dtu

Script = namedtuple('Script', 'package script desc filename')
tag = dtu.DuckietownConstants.ADD_SHORTCUT_TAG


def find_cmds_to_shortcut():
    package2dir = dtu.get_list_of_packages_in_catkin_ws()
    for package, src in package2dir.items():

        src = dtu.get_ros_package_path(package)

        cmd = ['find', src, '-type', 'f', '-executable']

        res = dtu.system_cmd_result(cwd='.', cmd=cmd, display_stdout=False, display_stderr=False,
                                    raise_on_error=True)

        filenames = [x for x in res.stdout.strip().split('\n') if x]

        for fn in filenames:
            data = open(fn).read()
            if tag in data:
                b = os.path.basename(fn)
                desc = None
                yield Script(package=package, script=b, desc=desc, filename=fn)
            else:
                pass
                dtu.logger.debug('ignoring %s' % fn)


def make_shortcuts_main():
    if len(sys.argv) != 2:
        msg = 'Expected an argument, the output directory.'
        raise dtu.DTUserError(msg)

    outd = sys.argv[1]

    scripts = list(find_cmds_to_shortcut())
    for res in scripts:
        filename = os.path.join(outd, 'dt-%s-%s' % (res.package, res.script))

        script = """
#!/bin/bash

# Autogenerated file - DO NOT EDIT

# This file was generated by the command {command}
# because the file {filename}
# included the tag "{tag}".

rosrun {package} {script} "$@"

    """
        d = {}
        d['package'] = res.package
        d['filename'] = res.filename
        d['script'] = res.script
        d['command'] = sys.argv[0]
        d['tag'] = tag

        script = script.format(**d).strip()

        dtu.write_data_to_file(script, filename)
        make_executable(filename)


def make_executable(path):
    mode0 = os.stat(path).st_mode
    mode = mode0 | ((mode0 & 0o444) >> 2)  # copy R bits to X
    if mode != mode0:
        # dtu.logger.debug('setting permissions of %s to %s' % (mode, path))
        os.chmod(path, mode)
    else:
        pass
        # dtu.logger.debug('permissions already %s for %s' % (mode, path))


dtu.wrap_script_entry_point(make_shortcuts_main)
